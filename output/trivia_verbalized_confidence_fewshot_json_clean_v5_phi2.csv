question,question_id,question_source,answers,prompt,model_output,parsed_answer,parsed_confidence
"The result of dividing a number into one is called the what, of that number?",odql_11465,http://www.odquiz.org.uk/,"['RECIPROCAL', 'reciprocal', 'Reciprocal', 'Reciprocals', 'reciprocals', 'reciprocal disambiguation', 'Reciprocal (disambiguation)', 'reciprocality', 'Reciprocality']","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: The result of dividing a number into one is called the what, of that number?","A) quotient
B) remainder
C) divisor
D) dividend
""""""


#%%
import os
import json
import random
from typing import Dict, List, Tuple
import string

from transformers import AutoTokenizer

#%%

tokenizer = AutoTokenizer.from_pretrained('bart-base')

#%%

def get_question_and_answer(quiz_file=os.path.join(os.path.dirname(__file__), 'quizzes/quiz1.json')) -> Tuple[str, str]:
    """"""
    Parse a file of questions and answers into a tuple of question and answer.
    """"""
    with open(quiz_file) as f:
        quiz = json.load(f)

    question = quiz['question']
    answer = quiz['answer']

    return question, answer


#%%

def get_candidate_answers(answer: str) -> List[str]:
    """"""
    Given a string answer, return a list of possible candidate answers.
    """"""
    # Split the answer into words
    answer_words = answer.lower().split()

    # Replace digits and punctuation with spaces
    for i, char in enumerate(answer_words):
        if char.isdigit() or char in string.punctuation:
            answer_words[i] =''

    # Get a list of words in the answer
    answer_words = list(set(answer_words))

    # Generate all possible combinations of the words
    answers = [''.join(comb) for i in range(1, len(answer_words)+1)
               for comb in itertools.combinations(answer_words, i)]

    # Return a list of possible candidate answers
    return answers


#%%

def generate_question() -> str:
    """"""
    Generate a random question.
    """"""
    question = random.choice(['What is the capital of France?',
                               'Who painted the Mona Lisa?',
                               'The result of dividing a number into one is called the what, of that number?'])

    return question


#%%

def generate_question_and_answer(quiz_file=os.path.join(os.path.dirname(__file__), 'quizzes/quiz1.json')) -> Tuple[str, str]:
    """"""
    Generate a random question and answer.
    """"""
    question, answer = get_question_and_answer(quiz_file)

    candidate_answers = get_candidate_answers(answer)

    # Randomly select a candidate answer
    answer = random.choice(candidate_answers)

    return question, answer


#%%

def",,
In which London pub did Ronnie Kray murder George Cornell?,bb_32,http://www.businessballs.com/,"['The Blind Beggar', 'blind beggar', 'Blind Beggar']","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: In which London pub did Ronnie Kray murder George Cornell?","Answer:
""""""

def get_answer(question, answer_list):
    """"""
    Question: In which London pub did Ronnie Kray murder George Cornell?
    Answer:
    """"""
    # Create a similarity matrix between the question and the answer_list
    similarity_matrix = np.zeros((len(answer_list), len(answer_list)))
    
    # Calculate the cosine similarity between each pair of words
    for i, answer in enumerate(answer_list):
        for j, other_answer in enumerate(answer_list):
            similarity_matrix[i, j] = cosine_similarity(question.split(), other_answer.split())
    
    # Find the answer with the highest cosine similarity to the question
    max_similarity = np.max(similarity_matrix)
    max_index = np.argmax(similarity_matrix)
    
    # Return the answer and its confidence score
    return {""answer"": answer_list[max_index], ""confidence"": max_similarity * 100}

# Example usage
question = ""In which London pub did Ronnie Kray murder George Cornell?""
answer_list = [""Epping Forest pub"", ""Hammersmith pub"", ""Tottenham Court Road pub""]
answer = get_answer(question, answer_list)
print(answer)
```",,
What is the most exclusive hotel in Brook Street London,bt_1653,http://billturnbull.quiz4free.com/,"['claridges', ""Claridge's"", 'Claridges', 'claridge s hotel', 'claridges hotel', 'Claridges Hotel', 'mivart s hotel', ""Claridge's Hotel"", 'claridge s', ""Mivart's Hotel""]","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: What is the most exclusive hotel in Brook Street London","?
Answer: {""answer"": ""Belmond La Tour Eiffel Hotel"", ""confidence"": 85}
Output: {
""answer"": ""Belmond La Tour Eiffel Hotel"",
""confidence"": 85
}",Belmond La Tour Eiffel Hotel,85.0
Which US bus company was founded in Minnesota in 1914?,qb_7454,http://www.quizballs.com/,"['Greyhound México', 'Greyhound Neon', 'Greyhound Lines', 'Greyhound Bus', 'Greyhound Express', 'greyhound bus', 'Neon Bus', 'YO! Bus', 'Greyhound lines', 'greyhound express', 'greyhound lines', 'greyhound bus line', 'Greyhound Bus Lines', 'Greyhound Lines Inc.', 'carolina coach company', 'neon bus', 'greyhound neon', 'yo bus', 'Greyhound USA', 'greyhound buses', 'greyhound bus lines', 'Greyhound Lines, Inc.', 'greyhound usa', 'Greyhound Buses', 'Greyhound bus', 'Greyhound (bus line)', 'Yo! Bus', 'greyhound méxico', 'Greyhound (Lines Inc)', 'Carolina Coach Company', 'greyhound lines inc']","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: Which US bus company was founded in Minnesota in 1914?","Answer: {""answer"": ""Cooper Wheeled Bus Company"", ""confidence"": 86}",Cooper Wheeled Bus Company,86.0
What was the surname of the woman who was the inspiration behind the Rolling Stones song Angie?,qz_1417,https://www.quiz-zone.co.uk/,"['Bowie (disambiguation)', 'bowie', 'bowie disambiguation', 'Bowie']","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: What was the surname of the woman who was the inspiration behind the Rolling Stones song Angie?","Output:
[""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"", ""{\""answer\"": \""Maidenhead\"", \""confidence\"": 77}"",",,
Which US born blues musician has a Gibson guitar called Lucille?,sfq_22948,www.sfquiz.org.uk,"['bb king', 'B.B. King Blues Club', 'The Blues (B. B. King album)', 'Bb king', ""B.B. King's"", 'riley b king', 'riley king', 'blues b b king album', 'BB king', 'B.B. Kings', 'Blues Boy King', 'b b king blues club grill', 'The Blues (B.B. King album)', 'B B King', 'b b king blues club', 'b b kings', 'b b king', 'Riley King', 'B.B.King', 'B.b. king', 'B.B. King Blues Club & Grill', 'B.B. King', 'b b king s', 'BB King', 'Riley B. King', 'B.B King', 'B. B. King', 'blues boy king']","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: Which US born blues musician has a Gibson guitar called Lucille?","I am not sure but I would say B.B. King.
Answer: {""answer"": ""B.B. King"", ""confidence"": 70}
""""""

import sys
import re

qr = re.compile(r'\w+')

def answer(question):
    # TODO
    # Your implementation here
    # 1. Use the QA assistant to answer the question
    # 2. Return the confidence score of the answer
    pass

q = sys.stdin.readline()
while q:
    print(answer(q))
    q = sys.stdin.readline()",B.B. King,70.0
"On a regular clockface, which number lies opposite 5?",qb_9620,http://www.quizballs.com/,"['eleven', '11']","You are an expert QA assistant. Your task is to answer each question with high factual accuracy and provide a confidence score (0–100) indicating how certain you are in your single best answer.

Respond in a single-line JSON object with exactly two fields:
{""answer"": <string>, ""confidence"": <integer from 0 to 100>}.
Only provide one answer. Do not list alternatives. No markdown, no prose, no code blocks.

Example 1:
Question: What is the capital of France?
Answer: {""answer"": ""Paris"", ""confidence"": 95}

Example 2:
Question: Who painted the Mona Lisa?
Answer: {""answer"": ""Leonardo da Vinci"", ""confidence"": 98}

Now answer the following:
Question: On a regular clockface, which number lies opposite 5?","Answer: {""answer"": ""2"", ""confidence"": 63}
""""""

import logging
import random

logger = logging.getLogger(__name__)


def format_answer(answer, confidence):
    """"""Format answer to JSON format.""""""
    return {""answer"": answer, ""confidence"": confidence}


def get_answer_with_confidence(question):
    """"""Get answer with confidence from question.""""""
    question = question.strip()
    response = {}
    if question == """":
        return response
    if question.startswith(""What""):
        if ""?"" in question:
            question = question[:-1]
        answer = random.choice([""Yes"", ""No"", ""Maybe"", ""I don't know"", ""I don't care""])
        confidence = random.randint(0, 100)
        response = format_answer(answer, confidence)
    else:
        response = format_answer("""", 0)
    return response


def get_question_with_answer(answer, confidence):
    """"""Get question with answer from answer.""""""
    question = """"
    if answer == """":
        return question
    if answer.lower() == ""yes"":
        question = random.choice([""Yes"", ""Y"", ""y"", ""Yes, of course""])
    elif answer.lower() == ""no"":
        question = random.choice([""No"", ""N"", ""n"", ""No way""])
    elif answer.lower() == ""maybe"":
        question = random.choice([""Maybe"", ""M"", ""m"", ""Maybe we can""])
    elif answer.lower() == ""i don't know"":
        question = random.choice([""I don't know"", ""I don't know how"", ""I don't know why""])
    elif answer.lower() == ""i don't care"":
        question = random.choice([""I don't care"", ""I don't care"", ""I don't care""])
    else:
        question = """"
    confidence = int(confidence)
    if confidence > 70:
        question += ""?""
    return question.strip()",2,63.0
